{"remainingRequest":"C:\\Users\\bglop\\Desktop\\TSIW-2ANO\\PWEBI\\Projeto-EmoChamp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\bglop\\Desktop\\TSIW-2ANO\\PWEBI\\Projeto-EmoChamp\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\bglop\\Desktop\\TSIW-2ANO\\PWEBI\\Projeto-EmoChamp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bglop\\Desktop\\TSIW-2ANO\\PWEBI\\Projeto-EmoChamp\\src\\views\\Register.vue?vue&type=template&id=63ae9146&scoped=true&","dependencies":[{"path":"C:\\Users\\bglop\\Desktop\\TSIW-2ANO\\PWEBI\\Projeto-EmoChamp\\src\\views\\Register.vue","mtime":1641991188950},{"path":"C:\\Users\\bglop\\Desktop\\TSIW-2ANO\\PWEBI\\Projeto-EmoChamp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641900754718},{"path":"C:\\Users\\bglop\\Desktop\\TSIW-2ANO\\PWEBI\\Projeto-EmoChamp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1641900964090},{"path":"C:\\Users\\bglop\\Desktop\\TSIW-2ANO\\PWEBI\\Projeto-EmoChamp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641900754718},{"path":"C:\\Users\\bglop\\Desktop\\TSIW-2ANO\\PWEBI\\Projeto-EmoChamp\\node_modules\\vue-loader\\lib\\index.js","mtime":1641900964078}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}